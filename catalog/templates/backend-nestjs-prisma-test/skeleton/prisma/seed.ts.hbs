import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  // Create sample categories
  const category1 = await prisma.category.upsert({
    where: { name: 'Technology' },
    update: {},
    create: {
      name: 'Technology',
    },
  });

  const category2 = await prisma.category.upsert({
    where: { name: 'Programming' },
    update: {},
    create: {
      name: 'Programming',
    },
  });

  // Create sample user
  const user = await prisma.user.upsert({
    where: { email: 'admin@example.com' },
    update: {},
    create: {
      email: 'admin@example.com',
      password: 'hashedpassword', // In real app, hash this password
    },
  });

  // Create sample posts
  const post1 = await prisma.post.upsert({
    where: { id: 1 },
    update: {},
    create: {
      title: 'Welcome to {{ values.projectName }}',
      content: 'This is your first post! Edit or delete this post to get started.',
      authorId: user.id,
      categoryId: category1.id,
      status: 'PUBLISHED',
    },
  });

  const post2 = await prisma.post.upsert({
    where: { id: 2 },
    update: {},
    create: {
      title: 'Getting Started with NestJS',
      content: 'Learn how to build scalable backend applications with NestJS.',
      authorId: user.id,
      categoryId: category2.id,
      status: 'PUBLISHED',
    },
  });

  console.log({ category1, category2, user, post1, post2 });
}

main()
  .catch((e) => {
    console.error(e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
